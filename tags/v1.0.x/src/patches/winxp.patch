Index: ignored_changed_files.txt
===================================================================
--- ignored_changed_files.txt	(revision 19793)
+++ ignored_changed_files.txt	(working copy)
@@ -7,4 +7,7 @@
 
 
 
+ignored_changed_files.txt
+setup.py
+xpra/codecs/dec_avcodec2/decoder.pyx
 #preserve the gap above to make it easier to modify this file with patches
\ No newline at end of file
Index: setup.py
===================================================================
--- setup.py	(revision 19793)
+++ setup.py	(working copy)
@@ -2423,7 +2423,7 @@
 if dec_avcodec2_ENABLED:
     avcodec2_pkgconfig = pkgconfig("avcodec", "avutil", "avformat")
     cython_add(Extension("xpra.codecs.dec_avcodec2.decoder",
-                ["xpra/codecs/dec_avcodec2/decoder.pyx", "xpra/codecs/dec_avcodec2/register_compat.c"]+membuffers_c,
+                ["xpra/codecs/dec_avcodec2/decoder.pyx"]+membuffers_c,
                 **avcodec2_pkgconfig))
 
 
Index: xpra/codecs/dec_avcodec2/decoder.pyx
===================================================================
--- xpra/codecs/dec_avcodec2/decoder.pyx	(revision 19793)
+++ xpra/codecs/dec_avcodec2/decoder.pyx	(working copy)
@@ -32,10 +32,7 @@
     void * memset(void * ptr, int value, size_t num) nogil
     void free(void * ptr) nogil
 
-cdef extern from "register_compat.h":
-    void register_all()
 
-
 cdef extern from "../../inline.h":
     pass
 
@@ -42,7 +39,6 @@
 cdef extern from "../../buffers/memalign.h":
     void *xmemalign(size_t size)
 
-
 cdef extern from "libavutil/mem.h":
     void av_free(void *ptr)
 
@@ -105,6 +101,7 @@
     AVCodecID AV_CODEC_ID_MPEG4
 
     #init and free:
+    void avcodec_register_all()
     AVCodec *avcodec_find_decoder(AVCodecID id)
     AVCodecContext *avcodec_alloc_context3(const AVCodec *codec)
     int avcodec_open2(AVCodecContext *avctx, const AVCodec *codec, AVDictionary **options)
@@ -141,7 +138,7 @@
 def get_version():
     return (LIBAVCODEC_VERSION_MAJOR, LIBAVCODEC_VERSION_MINOR, LIBAVCODEC_VERSION_MICRO)
 
-register_all()
+avcodec_register_all()
 CODECS = []
 if avcodec_find_decoder(AV_CODEC_ID_H264)!=NULL:
     CODECS.append("h264")
@@ -341,7 +338,7 @@
             return  False
         self.actual_pix_fmt = self.pix_fmt
 
-        register_all()
+        avcodec_register_all()
 
         cdef AVCodecID CodecID
         if self.encoding=="h264":
